<?xml version="1.0"?>
<launch>
  <node name="master_sync" pkg="master_sync_fkie" type="master_sync">
    <!-- Performs resync after the host was offline: unregister and register again to avoid connection losses to python topic. These does not suppot reconnection! -->
    <param name="resync_on_reconnect" value="True" />
    <!-- A configurable period that controls how long the offline-online period [sec] is before the resync kicks in.
     (Since version 0.5.9)-->
    <param name="resync_on_reconnect_timeout" value="0" />
    <!-- Since version 0.7.4:
      For all sync_* and ignore_* parameter you can use follow structure to define filter for specific hosts:
      <rosparam param="sync_topics">
          - hostname:
            - filter
      </rosparam>
    -->
    <!-- A filter list with patterns. If this pattern merges to a node, topic or service it will not be synchronized.
     (Since version 0.5.4)-->
    <rosparam param="do_not_sync">[]</rosparam>

    <!-- This list with names of ROS master to ignore -->
    <rosparam param="ignore_hosts">[]</rosparam>

    <!-- This list with names of ROS master to synchronize. Only this ROS master in this list will be synchronized. The ~ignore_hosts list is processed first. -->
    <rosparam param="sync_hosts">[]</rosparam>

    <!-- The list of nodes, which are to be ignored while a synchroniation. All their topics and services are ignored!
    These are defaults and cannot be removed: [/rosout, "/*master_sync* node", "remote /*master_discovery* node", "/*node_manager", /*zeroconf] -->
    <rosparam param="ignore_nodes">[/non_markov_localization, /action_move_base, /attached_object_publisher, /base_rviz_wrapper, /collision_environment, /collision_trajectory_filter_arm, /collision_trajectory_filter_head, /depthcloud_encoder_node, /enmap_to_rosmap, /graph_navigation, /grid_map_server, /heartbeat_watcher, /hsrb/angle_sensors_alignment_node, /hsrb/camera_frame_tf_publisher, /hsrb/computer_monitor_node, /hsrb/controller_spawner, /hsrb/diag/battery_check, /hsrb/diag/force_torque_sensor_check_check, /hsrb/diag/hand_camera_check, /hsrb/diag/head_center_camera_check, /hsrb/diag/imu_sensor_check, /hsrb/diag/motor_amp_check, /hsrb/diag/stereo_camera_check, /hsrb/diag/urg_sensor_check, /hsrb/diag/usb_io_check, /hsrb/diag/xtion_check, /hsrb/diag_interactive/bumper_sensor_check, /hsrb/diag_interactive/microphone_check, /hsrb/diag_interactive/pressure_sensor_check, /hsrb/diag_interactive/speaker_check, /hsrb/diag_interactive/status_led_check, /hsrb/diagnostic_aggregator, /hsrb/diagnostics_journald, /hsrb/dynpick_driver_node, /hsrb/fp_rectifier, /hsrb/hand_camera, /hsrb/hand_camera/diag_updater, /hsrb/hand_camera/hand_camera_nodelet_manager, /hsrb/hand_camera/hand_camera_rectifier, /hsrb/hand_camera/respawner, /hsrb/head_center_camera, /hsrb/head_center_camera/diag_updater, /hsrb/head_center_camera/head_center_camera_nodelet_manager, /hsrb/head_center_camera/head_center_camera_rectifier, /hsrb/head_center_camera/respawner, /hsrb/head_l_stereo_camera_diag_updater, /hsrb/head_r_stereo_camera_diag_updater, /hsrb/head_rgbd_sensor/color_img_diag_updater, /hsrb/head_rgbd_sensor/depth_img_diag_updater, /hsrb/head_rgbd_sensor/depth_registered_rectified_points, /hsrb/head_rgbd_sensor/depth_registered_rectifier_nodelet, /hsrb/head_rgbd_sensor/driver, /hsrb/head_rgbd_sensor/points_diag_updater, /hsrb/head_rgbd_sensor/rgb_rectify_color, /hsrb/head_rgbd_sensor_respawner, /hsrb/hsrb_bumper, /hsrb/hsrb_grasp_state_observer, /hsrb/hsrb_io_monitor, /hsrb/impedance_control, /hsrb/interactive_teleop, /hsrb/interactive_teleop_joy, /hsrb/joint_impedance_control_server, /hsrb/joy_node, /hsrb/laser_scan_matcher_node, /hsrb/odometry_switcher, /hsrb/pose_stamped_to_odometry, /hsrb/pseudo_endeffector_controller, /hsrb/pseudo_velocity_controller, /hsrb/reduce_color, /hsrb/rgbd_sensor_rgb_frame_tf_publisher, /hsrb/robot_hardware, /hsrb/robot_state/joint_state_pub, /hsrb/robot_state/robot_state_pub, /hsrb/rosout_journald, /hsrb/runtime_logger, /hsrb/sanyo_battery, /hsrb/serial_node, /hsrb/status_led_node, /hsrb/stereo_camera, /hsrb/stereo_camera_nodelet_manager, /hsrb/stereo_camera_respawner, /hsrb/suction_server, /hsrb/urg_node, /hsrb/wrist_wrench/compensation_node, /hsrb_planner, /hsrb_timeopt_filter, /hsrb_timeopt_filter_node, /hsrb_web_server_node, /interactive_grasp_planner, /interactive_marker_proxy, /map_odom_swithcer, /marker_based_localizer, /mesh_data_server, /move_base, /omni_path_follower, /perspective_transformer, /remote_exec_manager, /robot_service, /rosapi, /rosbridge_websocket, /rviz, /safe_pose_changer, /safety_velocity_limiter, /scan_to_cloud_converter, /task_carry, /text_to_speech, /tf2_buffer_server, /tf2_web_republisher, /tmc_map_merger, /trajectory_filter, /vector_display*, /velocity_switcher, /viewpoint_controller, /waypoint_hsr, /web_video_server, /web_video_server2]</rosparam>

    <!-- The list of nodes to synchronize. Only topics of this nodes are synchronized. The ~ignore_nodes, ~ignore_topics and ~ignore_services lists are processed first. -->
    <!-- This roscore needs global_pose of hsrb and local costmap (dynamic_obstacle_map) -->
    <rosparam param="sync_nodes">[/pose_integrator,/hsrb/head_rgbd_sensor/head_rgbd_sensor_nodelet_manager]</rosparam>

    <!-- The list of topics, which are to be ignored while a synchroniation. The ~ignore_nodes list is processed first.
    These are defaults and cannot be removed: ['/rosout', '/rosout_agg'] -->
    <rosparam param="ignore_topics">[]</rosparam>
    <rosparam param="ignore_publishers">[]</rosparam>
    <rosparam param="ignore_subscribers">[]</rosparam>

    <!-- The list of topics to synchronize. The ~ignore_nodes and ~ignore_topics lists are processed first. -->
    <rosparam param="sync_topics">[]</rosparam>

    <!-- The list of services, which are to be ignored while a synchroniation. The ~ignore_nodes list is processed first.
    These are defaults and cannot be removed: ['/*get_loggers', '/*set_logger_level'] -->
    <rosparam param="ignore_services">[]</rosparam>

    <!-- The list of services to synchronize. The ~ignore_nodes and ~ignore_services lists are processed first. -->
    <rosparam param="sync_services">[]</rosparam>

    <!-- This parameter is only regarded, if sync_nodes or sync_topics are set. In this case the subscribed and published topics are synchronized even if they are not in the sync_* list -->
    <param name="sync_topics_on_demand" value="False" />

    <!-- The list of types to ignore.
    These are defaults and cannot be removed: ['bond/Status'] -->
    <rosparam param="ignore_type">[]</rosparam>

    <!-- The nodes which are running not at the same host as the ROS master are not synchronized by default. Use sync_remote_nodes to sync these nodes also. -->
    <param name="sync_remote_nodes" value="False" />



  </node>
</launch>
